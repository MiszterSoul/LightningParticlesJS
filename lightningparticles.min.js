class LightningParticle{constructor(i,t={}){this.canvas=i,this.ctx=i.getContext("2d"),this.config={particleColor:t.pparticleColor??"#4a4a4a",particleOpacity:t.particleOpacity??.8,particleCount:t.particleCount??350,particleMinSize:t.particleMinSize??.5,particleMaxSize:t.particleMaxSize??2,particleSpeed:t.particleSpeed??1,lineColor:t.lineColor??"#ffffff",lineOpacity:t.lineOpacity??.6,lineThickness:t.lineThickness??.5,maxDistance:t.maxDistance??50,lightningColor:t.lightningColor??"#00ffff",lightningGlowColor:t.lightningGlowColor??"#00ffff",lightningOpacity:t.lightningOpacity??.8,lightningThickness:t.lightningThickness??2,lightningFrequency:t.lightningFrequency??.03,lightningGlow:t.lightningGlow??100,globalLightningDirection:t.globalLightningDirection??!1,lightningAngle:t.lightningAngle??Math.PI/2,lightningThroughParticles:t.lightningThroughParticles??!0,minLightningSegments:t.minLightningSegments??3,maxLightningSegments:t.maxLightningSegments??20,enableSplits:t.enableSplits??!0,minSplitSegments:t.minSplitSegments??3,maxSplits:t.maxSplits??3,splitProbability:t.splitProbability??.3,minLightningLifetime:t.minLightningLifetime??30,maxLightningLifetime:t.maxLightningLifetime??60,instantLightning:t.instantLightning??!1,minActiveLightning:t.minActiveLightning??1,maxActiveLightning:t.maxActiveLightning??5,backgroundColor:t.backgroundColor??"rgba(0, 0, 0, 0.75)",particleBlendMode:t.particleBlendMode??"source-over",lightningBlendMode:t.lightningBlendMode??"source-over",fpsLimit:t.fpsLimit??60,pauseOnBlur:t.pauseOnBlur??!0},this.particles=[],this.lightning=[],this.lastTime=0,this.deltaTime=0,this.fpsInterval=1e3/this.config.fpsLimit,this.resize=this.resize.bind(this),this.animate=this.animate.bind(this),this.handleVisibilityChange=this.handleVisibilityChange.bind(this),this.handleFocus=this.handleFocus.bind(this),this.handleBlur=this.handleBlur.bind(this),this.resize(),window.addEventListener("resize",this.resize),document.addEventListener("visibilitychange",this.handleVisibilityChange),window.addEventListener("focus",this.handleFocus),window.addEventListener("blur",this.handleBlur),this.isRunning=!0,requestAnimationFrame(this.animate)}resize(){for(this.canvas.width=this.canvas.offsetWidth,this.canvas.height=this.canvas.offsetHeight,this.particles.forEach((i=>{i.x>this.canvas.width&&(i.x=this.canvas.width),i.y>this.canvas.height&&(i.y=this.canvas.height)}));this.particles.length<this.config.particleCount;)this.createParticle()}createLightning(i=null,t=null,n=null){if(0===this.particles.length)return;let e=null!==i?i:this.particles[Math.floor(Math.random()*this.particles.length)].x,s=null!==t?t:this.particles[Math.floor(Math.random()*this.particles.length)].y,h=[{x:e,y:s}],a=this.config.globalLightningDirection?this.config.lightningAngle:Math.random()*Math.PI*2,l=null!==n?n:Math.floor(Math.random()*(this.config.maxLightningSegments-this.config.minLightningSegments+1))+this.config.minLightningSegments;for(let i=0;i<l;i++){let t=30*Math.random()+20,o=e+Math.cos(a)*t,c=s+Math.sin(a)*t;if(this.config.lightningThroughParticles){let i=this.findClosestParticle(o,c);i&&(o=i.x,c=i.y)}if(h.push({x:o,y:c}),this.config.enableSplits&&Math.random()<this.config.splitProbability&&null===n){let t=Math.floor(Math.random()*(l-i-this.config.minSplitSegments))+this.config.minSplitSegments;this.createLightning(o,c,t)}if(this.config.globalLightningDirection||(a+=(Math.random()-.5)*Math.PI/4),e=o,s=c,e<0||e>this.canvas.width||s<0||s>this.canvas.height)break}const o=Math.floor(Math.random()*(this.config.maxLightningLifetime-this.config.minLightningLifetime+1))+this.config.minLightningLifetime;this.lightning.push({points:h,alpha:this.config.lightningOpacity,maxAlpha:.5*Math.random()+.5,lifetime:o,currentLifetime:0})}findClosestParticle(i,t){let n=1/0,e=null;for(let s of this.particles){let h=Math.hypot(s.x-i,s.y-t);h<n&&(n=h,e=s)}return e}drawLightning(){this.ctx.globalCompositeOperation=this.config.lightningBlendMode,this.ctx.strokeStyle=this.config.lightningColor,this.ctx.lineWidth=this.config.lightningThickness,this.ctx.lineCap="round",this.ctx.lineJoin="round",this.lightning.forEach(((i,t)=>{let n;if(this.ctx.save(),this.ctx.beginPath(),this.ctx.moveTo(i.points[0].x,i.points[0].y),this.config.instantLightning)n=i.points.length;else{const t=i.currentLifetime/i.lifetime;n=Math.floor(t*i.points.length)}for(let t=1;t<n;t++)this.ctx.lineTo(i.points[t].x,i.points[t].y);this.ctx.shadowColor=this.config.lightningGlowColor,this.ctx.shadowBlur=this.config.lightningGlow,this.ctx.shadowOffsetX=0,this.ctx.shadowOffsetY=0,this.ctx.globalAlpha=i.alpha,this.ctx.stroke(),this.ctx.restore(),i.currentLifetime++,i.currentLifetime>=i.lifetime&&this.lightning.splice(t,1)})),this.ctx.globalAlpha=1,this.ctx.globalCompositeOperation="source-over"}createParticle(){this.particles.push({x:Math.random()*this.canvas.width,y:Math.random()*this.canvas.height,radius:Math.random()*(this.config.particleMaxSize-this.config.particleMinSize)+this.config.particleMinSize,color:this.config.particleColor,velocity:{x:(Math.random()-.5)*this.config.particleSpeed*2,y:(Math.random()-.5)*this.config.particleSpeed*2}})}updateParticles(){const i=this.deltaTime/(1e3/60);this.particles.forEach((t=>{t.x+=t.velocity.x*i,t.y+=t.velocity.y*i,(t.x<0||t.x>this.canvas.width)&&(t.velocity.x*=-1),(t.y<0||t.y>this.canvas.height)&&(t.velocity.y*=-1)}))}drawParticles(){this.ctx.globalCompositeOperation=this.config.particleBlendMode,this.ctx.fillStyle=`${this.config.particleColor}${Math.floor(255*this.config.particleOpacity).toString(16).padStart(2,"0")}`,this.particles.forEach((i=>{this.ctx.beginPath(),this.ctx.arc(i.x,i.y,i.radius,0,2*Math.PI),this.ctx.fill()})),this.ctx.globalCompositeOperation="source-over"}connectParticles(){this.ctx.strokeStyle=`${this.config.lineColor}${Math.floor(255*this.config.lineOpacity).toString(16).padStart(2,"0")}`,this.ctx.lineWidth=this.config.lineThickness;for(let i=0;i<this.particles.length;i++)for(let t=i+1;t<this.particles.length;t++){const n=this.particles[i].x-this.particles[t].x,e=this.particles[i].y-this.particles[t].y;Math.sqrt(n*n+e*e)<this.config.maxDistance&&(this.ctx.beginPath(),this.ctx.moveTo(this.particles[i].x,this.particles[i].y),this.ctx.lineTo(this.particles[t].x,this.particles[t].y),this.ctx.stroke())}}drawBackground(){this.ctx.fillStyle=this.config.backgroundColor,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height)}animate(i){this.isRunning&&(requestAnimationFrame(this.animate),this.isPaused||i-this.lastTime<this.fpsInterval||(this.deltaTime=i-this.lastTime,this.lastTime=i,this.drawBackground(),this.config.lightningOpacity>0&&Math.random()<this.config.lightningFrequency&&this.createLightning(),this.drawLightning(),this.particles.length<this.config.particleCount&&this.createParticle(),this.updateParticles(),this.connectParticles(),this.drawParticles()))}updateConfig(i){for(Object.assign(this.config,i),this.fpsInterval=1e3/this.config.fpsLimit,this.lightning=[];this.particles.length>this.config.particleCount;)this.particles.pop();for(;this.particles.length<this.config.particleCount;)this.createParticle()}destroy(){this.isRunning=!1,window.removeEventListener("resize",this.resize),document.removeEventListener("visibilitychange",this.handleVisibilityChange),window.removeEventListener("focus",this.handleFocus),window.removeEventListener("blur",this.handleBlur)}handleVisibilityChange(){document.hidden?this.pause():this.resume()}handleFocus(){this.config.pauseOnBlur&&this.resume()}handleBlur(){this.config.pauseOnBlur&&this.pause()}pause(){this.isPaused=!0}resume(){this.isPaused=!1,this.lastTime=performance.now(),requestAnimationFrame(this.animate)}}